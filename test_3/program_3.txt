# Setup the registers and pointers
0: LI R1, 1;     # R1 will be read pointer + Incrementer
1: LI R2, 10;    # R2 will be the write pointer
2: LI R3, 25;    # Jump To End Pointer
3: LD R4, R0;    # Read k value
4: LI R6, 1;     # Set Data Mem Counter = 1
    # Reserve R5 for For Loop Counter
    # Reserve R7 for Mod Counter
    # Reserve R8 for Max Cycles in for loop
    # Reserve R9 for Memory Extraction
5: LD R8, R2;    # Load max cycles from mem(10)
6: LI R10, 20;   # Set Pointer to LD
7: LI R11, 12;   # Set Pointer to JEQ
8: LI R12, 14;   # Set Pointer to ADD
9: LI R13, 16;   # Set Pointer to ADD
10: LI R14, 18;   # Set Pointer to ADD
11: LI R15, 21;  # Set Pointer to JLT

# Logic Processing
12: JEQ R3, R5, R8; # Check If For Loop Should End
13: JR R10; # Jump to LD
14: ADD R5, R5, R1; # Increment For Loop Counter
15: JR R11; # Jump to JEQ
16: ADD R6, R6, R1; # Increment For Load Counter
17: JR R12; # Jump to "Increment For Loop Counter"
18: ADD R7, R7, R1; # Increment Mod Counter
19: JR R13; # Jump to "Increment For Load Counter"

# Nonsense
20: LD R9, R6; # Load List Element from Data Mem
21: JLT R13, R9, R4; # Check if k > element (if so, jump tp LD)
22: JEQ R14, R9, R4; # Check if k = element (if so, jump to "Increment for Mod Counter")
23: SUB R9, R9, R4; # Decrement element with k
24: JR R15; # Jump to JLT
25: SD R7, R2; # Upload to Data Mem
26: END; #End
